// --- Import Th∆∞ Vi·ªán ---
import mongoose from 'mongoose';

// --- H√†m K·∫øt N·ªëi C∆° S·ªü D·ªØ Li·ªáu ---
/**
 * K·∫øt n·ªëi ƒë·∫øn MongoDB b·∫±ng URI t·ª´ bi·∫øn m√¥i tr∆∞·ªùng.
 * N·∫øu k·∫øt n·ªëi th√†nh c√¥ng: log th√†nh c√¥ng k√®m t√™n database.
 * N·∫øu th·∫•t b·∫°i ho·∫∑c h·∫øt th·ªùi gian k·∫øt n·ªëi: log l·ªói chi ti·∫øt v√† d·ª´ng ·ª©ng d·ª•ng.
 */
export async function connectToDatabase() {
  // L·∫•y URI k·∫øt n·ªëi t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
  const uri = process.env.MONGO_URI;

  // Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng c√≥ t·ªìn t·∫°i kh√¥ng
  if (!uri) {
    console.error(
      `[DATABASE] [${new Date().toLocaleString()}] ‚ùå Thi·∫øu bi·∫øn m√¥i tr∆∞·ªùng MONGO_URI.`,
    );
    process.exit(1);
  }

  try {
    // C·∫•u h√¨nh timeout k·∫øt n·ªëi l√† 10 gi√¢y
    const options = {
      serverSelectionTimeoutMS: 10000, // 10 gi√¢y
    };

    console.log(`[DATABASE] [${new Date().toLocaleString()}] üîå ƒêang k·∫øt n·ªëi ƒë·∫øn MongoDB...`);

    // Ti·∫øn h√†nh k·∫øt n·ªëi
    await mongoose.connect(uri, options);

    // L·∫•y t√™n database t·ª´ connection sau khi k·∫øt n·ªëi
    const dbName = mongoose.connection.name;

    console.log(
      `[DATABASE] [${new Date().toLocaleString()}] ‚úÖ ƒê√£ k·∫øt n·ªëi th√†nh c√¥ng ƒë·∫øn MongoDB (DB: ${dbName})`,
    );
  } catch (error) {
    // Log l·ªói k√®m th·ªùi gian n·∫øu k·∫øt n·ªëi th·∫•t b·∫°i
    console.error(
      `[DATABASE] [${new Date().toLocaleString()}] ‚ùå K·∫øt n·ªëi ƒë·∫øn MongoDB th·∫•t b·∫°i:`,
      error,
    );
    process.exit(1);
  }
}
